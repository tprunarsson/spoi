[
  {
    "intent": "move_event",
    "nl": {
      "en": "Move course {course_name} from {room_name} on {weekday_en} at {start_time_hhmm} to {room_name_new} on {weekday_en_new} at {start_time_hhmm_new}.",
      "is": "Færðu námskeiðið {course_name} úr {room_name} á {weekday_is} klukkan {start_time_hhmm} í {room_name_new} á {weekday_is_new} klukkan {start_time_hhmm_new}."
    },
    "sql": "UPDATE events SET roomId='{roomId_new}', start='{start_new}', end='{end_new}' WHERE courseOfferingId='{courseOfferingId}' AND roomId='{roomId}' AND start='{start}';",
    "created_at": "2025-06-29 10:04:39",
    "category": "",
    "updated_at": "2025-07-01T15:22:20.566457",
    "version": 1,
    "author": "",
    "generated_by": "",
    "verified_by": "",
    "verified_at": "",
    "status": "draft",
    "required_context_functions": [
      "get_weekday_date_lines"
    ],
    "context_instructions": "",
    "tags": [],
    "risk": "read_only",
    "notes": "",
    "example_nl": "Move course Introduction to AI from Room A on Monday at 10:00 to Room B on Tuesday at 12:00.",
    "example_sql": "UPDATE events SET roomId='B', start='2025-07-08T12:00:00', end='2025-07-08T13:00:00' WHERE courseOfferingId='ABC123' AND roomId='A' AND start='2025-07-07T10:00:00';",
    "deprecated_reason": "",
    "test_result": "",
    "related_intents": []
  },
  {
    "intent": "change_time",
    "nl": {
      "en": "Change the time for {course_name} in {room_name} from {weekday_en} at {start_time_hhmm} to {weekday_en_new} at {start_time_hhmm_new}.",
      "is": "Breyttu tíma fyrir {course_name} í {room_name} úr {weekday_is} klukkan {start_time_hhmm} í {weekday_is_new} klukkan {start_time_hhmm_new}."
    },
    "sql": "UPDATE events SET start='{start_new}', end='{end_new}' WHERE courseOfferingId='{courseOfferingId}' AND roomId='{roomId}' AND start='{start}';",
    "created_at": "2025-06-29 10:04:39",
    "category": "",
    "updated_at": "2025-07-01T15:22:20.566457",
    "version": 1,
    "author": "",
    "generated_by": "",
    "verified_by": "",
    "verified_at": "",
    "status": "draft",
    "required_context_functions": [
      "get_weekday_date_lines"
    ],
    "context_instructions": "",
    "tags": [],
    "risk": "read_only",
    "notes": "",
    "example_nl": "Change the time for Introduction to AI in Room A from Monday at 10:00 to Tuesday at 12:00.",
    "example_sql": "UPDATE events SET start='2025-07-08T12:00:00', end='2025-07-08T13:00:00' WHERE courseOfferingId='ABC123' AND roomId='A' AND start='2025-07-07T10:00:00';",
    "deprecated_reason": "",
    "test_result": "",
    "related_intents": []
  },
  {
    "intent": "remove_event",
    "nl": {
      "en": "Remove the course {course_name} in {room_name} on {weekday_en} at {start_time_hhmm}.",
      "is": "Fjarlægðu námskeiðið {course_name} í {room_name} á {weekday_is} klukkan {start_time_hhmm}."
    },
    "sql": "DELETE FROM events WHERE courseOfferingId='{courseOfferingId}' AND roomId='{roomId}' AND start='{start}';",
    "created_at": "2025-06-29 10:04:39",
    "category": "",
    "updated_at": "2025-07-01T15:22:20.566457",
    "version": 1,
    "author": "",
    "generated_by": "",
    "verified_by": "",
    "verified_at": "",
    "status": "draft",
    "required_context_functions": [],
    "context_instructions": "",
    "tags": [],
    "risk": "read_only",
    "notes": "",
    "example_nl": "Remove the course Introduction to AI in Room A on Monday at 10:00.",
    "example_sql": "DELETE FROM events WHERE courseOfferingId='ABC123' AND roomId='A' AND start='2025-07-07T10:00:00';",
    "deprecated_reason": "",
    "test_result": "",
    "related_intents": []
  },
  {
    "intent": "change_room",
    "nl": {
      "en": "Change event for {course_name} to room {room_name_new} on {weekday_en} at {start_time_hhmm}.",
      "is": "Breyttu viðburði fyrir {course_name} í stofu {room_name_new} á {weekday_is} klukkan {start_time_hhmm}."
    },
    "sql": "UPDATE events SET roomId='{roomId_new}' WHERE courseOfferingId='{courseOfferingId}' AND start='{start}';",
    "created_at": "2025-06-29 10:04:39",
    "category": "",
    "updated_at": "2025-07-01T15:22:20.566457",
    "version": 1,
    "author": "",
    "generated_by": "",
    "verified_by": "",
    "verified_at": "",
    "status": "draft",
    "required_context_functions": [],
    "context_instructions": "",
    "tags": [],
    "risk": "read_only",
    "notes": "",
    "example_nl": "Change event for Introduction to AI to room Room B on Monday at 10:00.",
    "example_sql": "UPDATE events SET roomId='B' WHERE courseOfferingId='ABC123' AND start='2025-07-07T10:00:00';",
    "deprecated_reason": "",
    "test_result": "",
    "related_intents": []
  },
  {
    "intent": "update_note",
    "nl": {
      "en": "Update the note for course {course_name} in {room_name} on {weekday_en} at {start_time_hhmm} to \"{note_new}\".",
      "is": "Uppfærðu athugasemdina fyrir námskeiðið {course_name} í {room_name} á {weekday_is} klukkan {start_time_hhmm} í \"{note_new}\"."
    },
    "sql": "UPDATE events SET note='{note_new}' WHERE courseOfferingId='{courseOfferingId}' AND roomId='{roomId}' AND start='{start}';",
    "created_at": "2025-06-29 10:04:39",
    "category": "",
    "updated_at": "2025-07-01T15:22:20.566457",
    "version": 1,
    "author": "",
    "generated_by": "",
    "verified_by": "",
    "verified_at": "",
    "status": "draft",
    "required_context_functions": [],
    "context_instructions": "",
    "tags": [],
    "risk": "read_only",
    "notes": "",
    "example_nl": "Update the note for course Introduction to AI in Room A on Monday at 10:00 to \"Bring laptop\".",
    "example_sql": "UPDATE events SET note='Bring laptop' WHERE courseOfferingId='ABC123' AND roomId='A' AND start='2025-07-07T10:00:00';",
    "deprecated_reason": "",
    "test_result": "",
    "related_intents": []
  },
  {
    "intent": "assign_teacher",
    "nl": {
      "en": "Assign {teacher_new} as the teacher for {course_name} in {room_name} on {weekday_en} at {start_time_hhmm}.",
      "is": "Úthlutaðu {teacher_new} sem kennara fyrir {course_name} í {room_name} á {weekday_is} klukkan {start_time_hhmm}."
    },
    "sql": "UPDATE events SET teachers='{teacher_new}' WHERE courseOfferingId='{courseOfferingId}' AND roomId='{roomId}' AND start='{start}';",
    "created_at": "2025-06-29 10:04:39",
    "category": "",
    "updated_at": "2025-07-01T15:22:20.566457",
    "version": 1,
    "author": "",
    "generated_by": "",
    "verified_by": "",
    "verified_at": "",
    "status": "draft",
    "required_context_functions": [],
    "context_instructions": "",
    "tags": [],
    "risk": "read_only",
    "notes": "",
    "example_nl": "Assign John Doe as the teacher for Introduction to AI in Room A on Monday at 10:00.",
    "example_sql": "UPDATE events SET teachers='John Doe' WHERE courseOfferingId='ABC123' AND roomId='A' AND start='2025-07-07T10:00:00';",
    "deprecated_reason": "",
    "test_result": "",
    "related_intents": []
  },
  {
    "intent": "remove_teacher",
    "nl": {
      "en": "Remove {teacher_old} from {course_name} in {room_name} on {weekday_en} at {start_time_hhmm}.",
      "is": "Fjarlægðu {teacher_old} úr {course_name} í {room_name} á {weekday_is} klukkan {start_time_hhmm}."
    },
    "sql": "UPDATE events SET teachers=NULL WHERE courseOfferingId='{courseOfferingId}' AND roomId='{roomId}' AND start='{start}';",
    "created_at": "2025-06-29 10:04:39",
    "category": "",
    "updated_at": "2025-07-01T15:22:20.566457",
    "version": 1,
    "author": "",
    "generated_by": "",
    "verified_by": "",
    "verified_at": "",
    "status": "draft",
    "required_context_functions": [],
    "context_instructions": "",
    "tags": [],
    "risk": "read_only",
    "notes": "",
    "example_nl": "Remove Jane Doe from Introduction to AI in Room A on Monday at 10:00.",
    "example_sql": "UPDATE events SET teachers=NULL WHERE courseOfferingId='ABC123' AND roomId='A' AND start='2025-07-07T10:00:00';",
    "deprecated_reason": "",
    "test_result": "",
    "related_intents": []
  },
  {
    "intent": "assign_group",
    "nl": {
      "en": "Assign group {group_new} to {course_name} in {room_name} on {weekday_en} at {start_time_hhmm}.",
      "is": "Úthlutaðu hópi {group_new} á {course_name} í {room_name} á {weekday_is} kl. {start_time_hhmm}."
    },
    "sql": "UPDATE events SET group='{group_new}' WHERE courseOfferingId='{courseOfferingId}' AND roomId='{roomId}' AND start='{start}';",
    "created_at": "2025-06-29 10:04:39",
    "category": "",
    "updated_at": "2025-07-01T15:22:20.566457",
    "version": 1,
    "author": "",
    "generated_by": "",
    "verified_by": "",
    "verified_at": "",
    "status": "draft",
    "required_context_functions": [],
    "context_instructions": "",
    "tags": [],
    "risk": "read_only",
    "notes": "",
    "example_nl": "Assign group A to Introduction to AI in Room A on Monday at 10:00.",
    "example_sql": "UPDATE events SET group='A' WHERE courseOfferingId='ABC123' AND roomId='A' AND start='2025-07-07T10:00:00';",
    "deprecated_reason": "",
    "test_result": "",
    "related_intents": []
  },
  {
    "intent": "multi_update",
    "nl": {
      "en": "Move course {course_name} from {room_name} on {weekday_en} at {start_time_hhmm} to {room_name_new} on {weekday_en_new} at {start_time_hhmm_new} and update note to \"{note_new}\".",
      "is": "Færðu námskeiðið {course_name} úr {room_name} á {weekday_is} klukkan {start_time_hhmm} í {room_name_new} á {weekday_is_new} klukkan {start_time_hhmm_new} og uppfærðu athugasemdina í \"{note_new}\"."
    },
    "sql": "UPDATE events SET roomId='{roomId_new}', start='{start_new}', end='{end_new}', note='{note_new}' WHERE courseOfferingId='{courseOfferingId}' AND roomId='{roomId}' AND start='{start}';",
    "created_at": "2025-06-29 10:04:39",
    "category": "",
    "updated_at": "2025-07-01T15:22:20.566457",
    "version": 1,
    "author": "",
    "generated_by": "",
    "verified_by": "",
    "verified_at": "",
    "status": "draft",
    "required_context_functions": [
      "get_weekday_date_lines"
    ],
    "context_instructions": "",
    "tags": [],
    "risk": "read_only",
    "notes": "",
    "example_nl": "Move course Introduction to AI from Room A on Monday at 10:00 to Room B on Tuesday at 12:00 and update note to \"Bring laptop\".",
    "example_sql": "UPDATE events SET roomId='B', start='2025-07-08T12:00:00', end='2025-07-08T13:00:00', note='Bring laptop' WHERE courseOfferingId='ABC123' AND roomId='A' AND start='2025-07-07T10:00:00';",
    "deprecated_reason": "",
    "test_result": "",
    "related_intents": []
  },
  {
    "intent": "student_count",
    "nl": {
      "en": "How many students are in {course_name} ({courseOfferingId})?",
      "is": "Hversu margir nemendur eru í {course_name} ({courseOfferingId})?"
    },
    "sql": "-- Sums students across all subgroups for a course\nSELECT SUM(count) AS total_students FROM course_student_counts WHERE courseOfferingId='{courseOfferingId}';",
    "created_at": "2025-06-29 10:04:39",
    "category": "",
    "updated_at": "2025-07-01T15:22:20.566457",
    "version": 1,
    "author": "",
    "generated_by": "",
    "verified_by": "",
    "verified_at": "",
    "status": "draft",
    "required_context_functions": [],
    "context_instructions": "",
    "tags": [],
    "risk": "read_only",
    "notes": "",
    "example_nl": "How many students are in Introduction to AI (ABC123)?",
    "example_sql": "-- Sums students across all subgroups for a course\nSELECT SUM(count) AS total_students FROM course_student_counts WHERE courseOfferingId='ABC123';",
    "deprecated_reason": "",
    "test_result": "",
    "related_intents": []
  },
  {
    "intent": "courses_also_taken",
    "nl": {
      "en": "What other courses are students in {course_name} ({courseOfferingId}) also taking?",
      "is": "Hvaða önnur námskeið eru þessir nemendur einnig skráðir í ({course_name}, {courseOfferingId})?"
    },
    "sql": "SELECT co.courseCode AS other_course_code, c2.canonicalName AS other_course_name, ccc.count FROM course_clash_counts ccc JOIN course_offerings co ON co.courseOfferingId = ccc.courseB JOIN courses c2 ON c2.courseCode = co.courseCode WHERE ccc.courseA = '{courseOfferingId}' AND ccc.count > 0 ORDER BY ccc.count DESC;",
    "created_at": "2025-06-29 10:04:39",
    "category": "",
    "updated_at": "2025-07-01T15:22:20.566457",
    "version": 1,
    "author": "",
    "generated_by": "",
    "verified_by": "",
    "verified_at": "",
    "status": "draft",
    "required_context_functions": [],
    "context_instructions": "",
    "tags": [],
    "risk": "read_only",
    "notes": "",
    "example_nl": "What other courses are students in Introduction to AI (ABC123) also taking?",
    "example_sql": "SELECT co.courseCode AS other_course_code, c2.canonicalName AS other_course_name, ccc.count FROM course_clash_counts ccc JOIN course_offerings co ON co.courseOfferingId = ccc.courseB JOIN courses c2 ON c2.courseCode = co.courseCode WHERE ccc.courseA = 'ABC123' AND ccc.count > 0 ORDER BY ccc.count DESC;",
    "deprecated_reason": "",
    "test_result": "",
    "related_intents": []
  },
  {
    "intent": "get_teachers",
    "nl": {
      "en": "Who is teaching {course_name}? Who are the teachers for {course_name}? Who are the teachers in {course_name} ({courseOfferingId})?",
      "is": "Hver kennir {course_name}? Hverjir eru kennarar fyrir {course_name}? Hverjir eru kennarar í {course_name} ({courseOfferingId})?"
    },
    "sql": "SELECT p.name AS teacher_name\nFROM course_offering_teachers cot\nJOIN persons p ON cot.personId = p.personId\nWHERE cot.courseOfferingId = '{courseOfferingId}';\n",
    "created_at": "2025-06-29T14:34:47.659113",
    "category": "",
    "updated_at": "2025-07-01T15:22:20.566457",
    "version": 1,
    "author": "",
    "generated_by": "",
    "verified_by": "",
    "verified_at": "",
    "status": "draft",
    "required_context_functions": [],
    "context_instructions": "",
    "tags": [],
    "risk": "read_only",
    "notes": "",
    "example_nl": "Who is teaching Introduction to AI? Who are the teachers for Introduction to AI? Who are the teachers in Introduction to AI (ABC123)?",
    "example_sql": "SELECT p.name AS teacher_name\nFROM course_offering_teachers cot\nJOIN persons p ON cot.personId = p.personId\nWHERE cot.courseOfferingId = 'ABC123';\n",
    "deprecated_reason": "",
    "test_result": "",
    "related_intents": []
  },
  {
    "intent": "get_teachers_and_their_id",
    "nl": {
      "en": "Who is teaching this course and what is their ID?",
      "is": "Hverjir eru að kenna þetta námskeið og hver er kennitala þeirra?"
    },
    "sql": "SELECT DISTINCT p.name AS teacher_name, p.id_number\nFROM course_offering_teachers cot\nJOIN persons p ON cot.personId = p.personId\nWHERE cot.courseOfferingId = '{courseOfferingId}';\n",
    "created_at": "2025-06-30T22:36:27.616994",
    "category": "",
    "updated_at": "2025-07-01T15:22:20.566457",
    "version": 1,
    "author": "",
    "generated_by": "",
    "verified_by": "",
    "verified_at": "",
    "status": "draft",
    "required_context_functions": [],
    "context_instructions": "",
    "tags": [],
    "risk": "read_only",
    "notes": "",
    "example_nl": "Who is teaching this course and what is their ID?",
    "example_sql": "SELECT DISTINCT p.name AS teacher_name, p.id_number\nFROM course_offering_teachers cot\nJOIN persons p ON cot.personId = p.personId\nWHERE cot.courseOfferingId = 'ABC123';\n",
    "deprecated_reason": "",
    "test_result": "",
    "related_intents": []
  },
  {
    "intent": "other_course_taken",
    "nl": {
      "en": "What other courses are students taking?",
      "is": "Hvaða önnur námskeið eru nemendur að taka?"
    },
    "sql": "SELECT \n    co.courseOfferingId AS other_course_offering_id,\n    co.courseCode AS other_course_code,\n    c.canonicalName AS other_course_name,\n    ccc.count\nFROM course_clash_counts ccc\nJOIN course_offerings co ON co.courseOfferingId = ccc.courseB\nJOIN courses c ON c.courseCode = co.courseCode\nWHERE ccc.courseA = '{courseOfferingId}'\n  AND ccc.count > 0\n  AND co.academicYear = (SELECT academicYear FROM course_offerings WHERE courseOfferingId = '{courseOfferingId}')\n  AND co.term = (SELECT term FROM course_offerings WHERE courseOfferingId = '{courseOfferingId}')\n  AND co.courseOfferingId != '{courseOfferingId}'\nORDER BY ccc.count DESC;",
    "created_at": "2025-07-01T11:52:43.014734",
    "category": "",
    "updated_at": "2025-07-01T15:22:20.566457",
    "version": 1,
    "author": "",
    "generated_by": "",
    "verified_by": "",
    "verified_at": "",
    "status": "draft",
    "required_context_functions": [],
    "context_instructions": "",
    "tags": [],
    "risk": "read_only",
    "notes": "",
    "example_nl": "What other courses are students taking?",
    "example_sql": "SELECT \n    co.courseOfferingId AS other_course_offering_id,\n    co.courseCode AS other_course_code,\n    c.canonicalName AS other_course_name,\n    ccc.count\nFROM course_clash_counts ccc\nJOIN course_offerings co ON co.courseOfferingId = ccc.courseB\nJOIN courses c ON c.courseCode = co.courseCode\nWHERE ccc.courseA = 'ABC123'\n  AND ccc.count > 0\n  AND co.academicYear = (SELECT academicYear FROM course_offerings WHERE courseOfferingId = 'ABC123')\n  AND co.term = (SELECT term FROM course_offerings WHERE courseOfferingId = 'ABC123')\n  AND co.courseOfferingId != 'ABC123'\nORDER BY ccc.count DESC;",
    "deprecated_reason": "",
    "test_result": "",
    "related_intents": []
  }
]